apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-ec2-instance
  title: Create an EC2 Instance on AWS
  description: Create an instance on AWS to deploy your application
  tags:
    - aws
    - ec2
    - platform

spec:
  owner: platform
  type: resource
  parameters:
    - title: EC2 Instance Creation
      required:
        - instanceName
        - region
        - instanceType
        - ami_id
        - action
      properties:
        instanceName:
          title: Instance Name
          type: string
          description: Name of the EC2 instance you want to create (e.g., my-ec2-instance)
          ui:autoFocus: true
          ui:options:
            row: 5

        region:
          title: AWS Region
          type: string
          description: Name of the region where you want to create your EC2 instance (e.g., us-east-1, ap-south-1)
          enum:
            - us-east-1
            - us-west-2
            - ap-south-1
            - eu-west-1
            - eu-central-1

        instanceType:
          title: Type of Instance
          type: string
          description: Type of the instance to deploy (e.g., t2.medium, t3.micro, etc.)
          enum:
            - t3.small
            - t3.micro
            - t3.medium
            - t3.large

        ami_id:
          title: AMI ID
          type: string
          description: ID of the AMI to use for the instance
          default: 'ami-08a6efd148b1f7504'
          pattern: '^ami-[a-z0-9]{8,17}$'

        assign_public_ip:
          title: Assign Public IP
          type: boolean
          description: Whether to assign a public IP address to the instance
          default: true

        action:
          title: Action
          type: string
          description: What action do you want to perform? (create or delete)
          enum:
            - apply
            - destroy
          default: apply

    - title: Repository Configuration
      required:
        - existingRepoUrl
        - visibility
      properties:
        existingRepoUrl:
          description: URL of the existing repository
          title: Existing Repository URL
          type: string
          ui:field: RepoUrlPicker
          ui:options:
           disableRepoCreation: true
           allowedHosts:
            - github.com
           allowedOwners:
            - Adams-Project-demo
           allowedRepos:
            - demo-repository
          
          visibility:
           title: Repository visibility
           type: string
           description: visibility of the Repository
           enum:
               - public

  steps:
    # - id: debug-inputs
    #   name: Debug Inputs
    #   action: debug:log
    #   input:
    #     message: |
    #       Dispatching GitHub Action with:
    #       Repo URL: ${{ parameters.existingRepoUrl }}
    #       Workflow ID: github/workflows/workflow.yml
    #       Branch: develop
    #       Inputs:
    #         instanceName: ${{ parameters.instanceName }}
    #         region: ${{ parameters.region }}
    #         instanceType: ${{ parameters.instanceType }}
    #         action: ${{ parameters.action }}

    - id: github-action
      name: Starting GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: .github/workflows/workflow.yml
        repoUrl: ${{ parameters.existingRepoUrl }}
        branch: main
        inputs:
          instanceName: ${{ parameters.instanceName }}
          region: ${{ parameters.region }}
          instanceType: ${{ parameters.instanceType }}
          ami_id: ${{ parameters.ami_id }}
          assign_public_ip: ${{ parameters.assign_public_ip }}
          action: ${{ parameters.action }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ parameters.existingRepoUrl }}
    #     catalogInfoPath: '/EPH-Test-Develop/AWS_EC2/catalog-info.yaml'

    - id: send-notification
      name: Send Success Notification
      action: notifications:send
      input:
        title: EC2 Instance ${{ parameters.instanceName }} - ${{ parameters.action }} Triggered
        description: Terraform action "${{ parameters.action }}" triggered for EC2 instance "${{ parameters.instanceName }}"
        link: '{{repoUrl parameters.existingRepoUrl }}/actions'
        severity: 'normal'
        topic: 'scaffolder'
        recipients: 'broadcast'

  output:
    links:
      - title: View in GitHub Actions
        icon: github
        url: 'https://github.com/Adams-Project-demo/demo-repository/actions'
      - title: AWS Console - EC2
        icon: aws
        url: 'https://console.aws.amazon.com/ec2/v2/home?region={{parameters.region}}#Instances:instanceId={{parameters.instanceId}}'
      # - title: Open in catalog
      #   icon: catalog
      #   entityRef: ${{ steps['register'].output.entityRef }}


